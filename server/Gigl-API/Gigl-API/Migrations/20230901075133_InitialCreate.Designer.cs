// <auto-generated />
using System;
using Gigl_API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gigl_API.Migrations
{
    [DbContext(typeof(GiglDBContext))]
    [Migration("20230901075133_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("Gigl_API.Models.Comedian", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Comedians");
                });

            modelBuilder.Entity("Gigl_API.Models.ComedianJoke", b =>
                {
                    b.Property<string>("ComedianId")
                        .HasColumnType("TEXT");

                    b.Property<string>("JokeId")
                        .HasColumnType("TEXT");

                    b.HasKey("ComedianId", "JokeId");

                    b.HasIndex("JokeId");

                    b.ToTable("ComedianJokes");
                });

            modelBuilder.Entity("Gigl_API.Models.Joke", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ComedianId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ComedianUsername")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gigls")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ComedianId");

                    b.ToTable("Jokes");
                });

            modelBuilder.Entity("Gigl_API.Models.ComedianJoke", b =>
                {
                    b.HasOne("Gigl_API.Models.Comedian", "Comedian")
                        .WithMany("LikedJokes")
                        .HasForeignKey("ComedianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gigl_API.Models.Joke", "Joke")
                        .WithMany("ComediansThatGigled")
                        .HasForeignKey("JokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comedian");

                    b.Navigation("Joke");
                });

            modelBuilder.Entity("Gigl_API.Models.Joke", b =>
                {
                    b.HasOne("Gigl_API.Models.Comedian", "Comedian")
                        .WithMany("Jokes")
                        .HasForeignKey("ComedianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comedian");
                });

            modelBuilder.Entity("Gigl_API.Models.Comedian", b =>
                {
                    b.Navigation("Jokes");

                    b.Navigation("LikedJokes");
                });

            modelBuilder.Entity("Gigl_API.Models.Joke", b =>
                {
                    b.Navigation("ComediansThatGigled");
                });
#pragma warning restore 612, 618
        }
    }
}
